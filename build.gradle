//-----------------
//Main build script
//-----------------
buildscript {
    ext.kotlin_version = '1.3.41'

    repositories {
        mavenCentral()
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version".toString()
    }
}

apply plugin: 'idea'
apply plugin: 'java'

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'idea'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://oss.jfrog.org/oss-snapshot-local/' }
        jcenter()
    }

    project.group   = "com.github.rpgjavainterpreter"
    project.version = "0.1"
}


idea {
    project {
        ipr {
            withXml { xmlProvider ->
                def project = xmlProvider.asNode()
                customizeGradleModules project
            }
        }
    }
}

def customizeGradleModules(project) {
    def gradleSettings = findComponent(project, 'GradleSettings')
    def option = gradleSettings.option.find {it.@name =="linkedExternalProjectsSettings" }
    option.GradleProjectSettings.appendNode 'option', [name: 'resolveModulePerSourceSet', value: 'false']
    option.GradleProjectSettings.appendNode 'option', [name: 'useAutoImport', value: 'true']
}

def findComponent(project, name) {
    project.component.find { it.@name == name }
}